@model MovieDatabase.Models.Movie

@{
    ViewData["Title"] = "Edit";
    string? poster_image_path = ViewBag.posterImagePathVB;
    bool has_poster = false;
    if (poster_image_path != null)
    {
        has_poster = true;
    }
}

<h1>Edit</h1>

<h4>Movie</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="id" />

            <div class="form-group">
                <label asp-for="title" class="control-label"></label>
                <input asp-for="title" class="form-control" />
                <span asp-validation-for="title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="year" class="control-label"></label>
                <input asp-for="year" class="form-control" />
                <span asp-validation-for="year" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="director_id">Director</label>
                <select asp-for="director_id" class="form-control" asp-items="ViewBag.directorVB"></select>
            </div>
            <div class="form-group">
                <label for="actorSearch">Actors</label>
                <input type="text" id="actorSearch" class="form-control" placeholder="Type to search actors..." />
                <ul id="actorResults" class="list-group"></ul>
                <input type="hidden" id="selectedActors" name="selectedActors" />
            </div>
            <div class="form-group">
                <ul id="chosenActors" class="list-group">
                    @foreach (var actor in ViewBag.actorsVB)
                    {
                        <li class="list-group-item" data-id="@actor.id">@actor.nameSurnameLabel <button type="button" class="btn btn-danger btn-sm float-right remove-actor">Remove</button></li>
                    }
                </ul>
            </div>
            <div class="form-group">
                <label for="genres">Genres</label>
                <select asp-for="genres" class="form-control" asp-items="ViewBag.genres" multiple="multiple"></select>
            </div>
            <div class="form-group">
                <label for="posterImagePath" class="control-label">Upload Poster Image</label>
                <input type="file" id="posterImagePath" name="posterImagePath" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="trailer_link" class="control-label"></label>
                <input asp-for="trailer_link" class="form-control" />
                <span asp-validation-for="trailer_link" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            let chosenActors = [];
            $('#actorSearch').on('keyup', function () {
                let query = $(this).val();
                if (query.length >= 2) {
                    $.ajax({
                        url: '@Url.Action("SearchActors", "Movies")',
                        data: { searchString: query },
                        success: function (data) {
                            $('#actorResults').empty();
                            data.forEach(actor => {
                                $('#actorResults').append(`<li class="list-group-item" data-id="${actor.id}">${actor.nameSurnameLabel}</li>`);
                            });
                        }
                    });
                } else {
                    $('#actorResults').empty();
                }
            });

            $(document).on('click', '#actorResults li', function () {
                let actorId = $(this).data('id');
                let actorName = $(this).text();
                if (!chosenActors.includes(actorId)) {
                    chosenActors.push(actorId);
                    $('#chosenActors').append(`<li class="list-group-item" data-id="${actorId}">${actorName} <button type="button" class="btn btn-danger btn-sm float-right remove-actor">Remove</button></li>`);
                    updateSelectedActors();
                }
                $('#actorResults').empty();
                $('#actorSearch').val('');
            });

            $(document).on('click', '.remove-actor', function () {
                let actorId = $(this).closest('li').data('id');
                chosenActors = chosenActors.filter(id => id !== actorId);
                $(this).closest('li').remove();
                updateSelectedActors();
            });

            function updateSelectedActors() {
                $('#selectedActors').val(chosenActors.join(','));
            }

            $('#chosenActors li').each(function () 
            {
                chosenActors.push($(this).data('id'));
            });
            updateSelectedActors();
        });
    </script>
}